/*
给定一个非负数组，每一个值代表该位置上有几个铜板。a和b玩游戏，a先手，b后手，
轮到某个人的时候，只能在一个位置上拿任意数量的铜板，但是不能不拿。谁最先把铜
板拿完谁赢。假设a和b都极度聪明，请返回获胜者的名字。
*/
#include<iostream>
#include<vector>
using namespace std;
/*
偶数和奇数的二进制表示：

偶数的二进制表示的最低位是0。
奇数的二进制表示的最低位是1。
基于这些性质，可以得出以下结论：

当你执行异或运算时，如果两个数的最低位不同，结果是1，这表示这两个数的奇偶性不同。
当两个数的最低位相同时，结果是0，这表示这两个数的奇偶性相同。
因此，异或运算可以用于检测奇偶性，因为它的结果取决于两个数的最低位是否相同。
这在解决问题中的奇数和偶数相关的情况非常有用，如在Nim游戏中，
*/
void printWinner(vector<int>arr){
    int eor=0;
    for(int num:arr){
        eor^=num;
    }
    if(eor==0){
        cout<<"后手赢"<<endl;
    }else{
        cout<<"先手赢"<<endl;
    }
}